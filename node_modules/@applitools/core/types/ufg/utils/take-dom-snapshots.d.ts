import type { Size } from '@applitools/utils';
import { type Logger } from '@applitools/logger';
import { type SpecType, type Driver } from '@applitools/driver';
import { type DomSnapshot, type Renderer } from '@applitools/ufg-client';
import { type DomSnapshotSettings } from './take-dom-snapshot';
export * from './take-dom-snapshot';
export type DomSnapshotsSettings = DomSnapshotSettings & {
    renderers: Renderer[];
    waitBeforeCapture?: number | (() => void);
    layoutBreakpoints?: {
        breakpoints: number[] | boolean;
        reload?: boolean;
    };
};
export declare function takeDomSnapshots<TSpec extends SpecType>({ driver, settings, hooks, provides, logger, }: {
    driver: Driver<TSpec>;
    settings: DomSnapshotsSettings;
    hooks?: {
        beforeSnapshots?(): void | Promise<void>;
        beforeEachSnapshot?(): void | Promise<void>;
    };
    provides?: {
        getChromeEmulationDevices(): Promise<Record<string, Record<string, Size>>>;
        getIOSDevices(): Promise<Record<string, Record<string, Size>>>;
    };
    logger: Logger;
}): Promise<DomSnapshot[]>;
